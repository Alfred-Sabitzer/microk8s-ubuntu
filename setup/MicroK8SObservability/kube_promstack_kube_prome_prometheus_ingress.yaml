---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: kube-prom-stack-kube-prome-operator-ingress
  namespace: observability
  annotations:
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: observability.basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
    #
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # DDoS - Limitation
    nginx.ingress.kubernetes.io/limit-rps: "5"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    nginx.ingress.kubernetes.io/whitelist-source-range: 127.0.0.1/8,169.254.0.0/16,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16 # Allow local access
    cert-manager.io/cluster-issuer: k8s-issuer
spec:
  ingressClassName: public
  tls:
    - hosts:
        - k8s.prometheus.slainte.at
      secretName: k8s-prometheus-slainte-at
  rules:
    - host: k8s.prometheus.slainte.at
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prom-stack-kube-prome-prometheus
                port:
                  number: 9090